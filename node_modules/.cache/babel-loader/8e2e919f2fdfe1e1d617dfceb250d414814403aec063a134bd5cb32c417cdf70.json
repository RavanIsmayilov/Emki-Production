{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nexport const fetchPageData = async () => {\n  _s();\n  const [targetLanguage, setTargetLanguage] = useState(\"en\");\n  try {\n    const response = await axios.get('https://emki-app-c841c0ee2e8c.herokuapp.com/page', {\n      target: targetLanguage\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_s(fetchPageData, \"Fz38KGk+pMBnovSNrxl+mXGWDA4=\");\nexport const fetchLangData = async () => {\n  try {\n    const response = await axios.get('https://emki-app-c841c0ee2e8c.herokuapp.com/announcement-translations/{languageId}');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchTransData = async () => {\n  try {\n    const response = await axios.get('https://emki-app-c841c0ee2e8c.herokuapp.com/announcement-translations');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","useState","fetchPageData","_s","targetLanguage","setTargetLanguage","response","get","target","data","error","fetchLangData","fetchTransData"],"sources":["C:/Users/User/OneDrive/Desktop/EMKI/emki/src/api/api.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const fetchPageData = async () => {\r\n  const [targetLanguage, setTargetLanguage] = useState(\"en\");\r\n  try {\r\n    const response = await axios.get('https://emki-app-c841c0ee2e8c.herokuapp.com/page', {\r\n      target:targetLanguage\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchLangData = async () => {\r\n  try {\r\n    const response = await axios.get('https://emki-app-c841c0ee2e8c.herokuapp.com/announcement-translations/{languageId}');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchTransData = async () => {\r\n  try {\r\n    const response = await axios.get('https://emki-app-c841c0ee2e8c.herokuapp.com/announcement-translations');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAGhC,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC1D,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,kDAAkD,EAAE;MACnFC,MAAM,EAACJ;IACT,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAACP,EAAA,CAVWD,aAAa;AAY1B,OAAO,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,oFAAoF,CAAC;IACtH,OAAOD,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,uEAAuE,CAAC;IACzG,OAAOD,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}